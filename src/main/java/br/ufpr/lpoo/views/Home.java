package br.ufpr.lpoo.views;

import br.ufpr.lpoo.utils.Imagens;
import br.ufpr.lpoo.controllers.Sistema;
import br.ufpr.lpoo.models.Tela;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Esta classe representa a tela inicial do sistema.
 * Ela implementa a interface Tela e define os botões e ações da tela inicial.
 */
public class Home implements Tela {
    private JPanel frame;
    private JButton clientesButton;
    private JButton contasButton;
    private JButton transactionsButton;
    private JLabel logo;

    /**
     * Construtor para a classe Home.
     * Define os valores iniciais para as variáveis de instância e adiciona os ouvintes de ação aos botões.
     */
    public Home() {
        clientesButton.addActionListener(new ActionListener() {
            /**
             * Este método é chamado quando o botão Clientes é clicado.
             * Ele navega para a tela ManterCliente.
             *
             * @param e O evento de ação.
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                ManterCliente frame = new ManterCliente();
                Sistema.navigate(frame);
            }
        });
        contasButton.addActionListener(new ActionListener() {
            /**
             * Este método é chamado quando o botão Contas é clicado.
             * Ele navega para a tela VincularCliente.
             *
             * @param e O evento de ação.
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                VincularCliente frame = new VincularCliente();
                Sistema.navigate(frame);
            }
        });
        transactionsButton.addActionListener(new ActionListener() {
            /**
             * Este método é chamado quando o botão Transações é clicado.
             * Ele navega para a tela ManipularConta.
             *
             * @param e O evento de ação.
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                ManipularConta frame = new ManipularConta();
                Sistema.navigate(frame);
            }
        });
        this.initUIComponents();
    }

    @Override
    public void initUIComponents() {
        this.logo.setIcon(Imagens.LOGO.icon(300, 300));
        this.contasButton.setIcon(Imagens.CONTAS.icon());
        this.clientesButton.setIcon(Imagens.CLIENTES.icon());
        this.transactionsButton.setIcon(Imagens.TRANSACTIONS.icon());
    }

    /**
     * Este método retorna o frame da tela.
     *
     * @return O frame da tela.
     */
    public JPanel getFrame() {
        return frame;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        frame = new JPanel();
        frame.setLayout(new GridLayoutManager(3, 3, new Insets(8, 8, 8, 8), -1, -1));
        frame.setBackground(new Color(-16442309));
        frame.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-1967873)), "Home", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(-1967873)));
        clientesButton = new JButton();
        clientesButton.setBackground(new Color(-11487489));
        clientesButton.setText("Clientes");
        frame.add(clientesButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        contasButton = new JButton();
        contasButton.setBackground(new Color(-11487489));
        contasButton.setText("Contas");
        frame.add(contasButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        transactionsButton = new JButton();
        transactionsButton.setBackground(new Color(-11487489));
        transactionsButton.setText("Transações");
        frame.add(transactionsButton, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setForeground(new Color(-1967873));
        label1.setText("© UFPR TADS 2024");
        frame.add(label1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_SOUTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        logo = new JLabel();
        logo.setIcon(new ImageIcon(getClass().getResource("/assets/logo.jpg")));
        logo.setText("");
        frame.add(logo, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(300, 300), new Dimension(300, 300), new Dimension(300, 300), 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return frame;
    }
}